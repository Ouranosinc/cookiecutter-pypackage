name: {{ cookiecutter.project_name }} Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - .cruft.json
      - CHANGELOG.rst
      - README.rst
      - pyproject.toml
      - tests/test_{{ cookiecutter.project_slug }}.py
      - src/{{ cookiecutter.project_slug }}/__init__.py
  pull_request:

concurrency:
{%- raw %}
  # For a given workflow, if we push to the same branch, cancel all previous builds on that branch except on master.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
{%- endraw %}

permissions:
  contents: read

jobs:
  lint:
    name: Lint (Python__PYTHON_VERSION__)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.x"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python__PYTHON_VERSION__
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: __PYTHON_VERSION__
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            .tox
          {% raw -%}
          key: ${{ hashFiles('pyproject.toml', 'tox.ini') }}-lint
          {%- endraw %}
      - name: Run linting suite
        run: |
          python -m tox -e lint

  test-pypi:
    name: Test with Python__PYTHON_VERSION__ (tox, __OS__)
    needs: lint
    runs-on: __OS__
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
          - "3.13"
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Python__PYTHON_VERSION__
        uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # v5.4.0
        with:
          python-version: __PYTHON_VERSION__
          cache: pip
      - name: Install CI libraries
        run: |
          python -m pip install --require-hashes -r CI/requirements_ci.txt
      - name: Environment Caching
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: .tox
          {%- raw %}
          key: ${{ matrix.os }}-Python${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'tox.ini') }}
          {%- endraw %}
      - name: Test with tox
        run: |
          python -m tox
        env:
          GITHUB_TOKEN: __GITHUB_TOKEN__
          COVERALLS_FLAG_NAME: run-__PYTHON_VERSION__
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

{%- if cookiecutter.use_conda == "y" %}

  test-conda:
    name: Test with Python__PYTHON_VERSION__ (Anaconda, __OS__)
    needs: lint
    runs-on: __OS__
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        python-version: [ "3.9", "3.10", "3.11", "3.12" ]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Setup Conda (Micromamba) with Python__PYTHON_VERSION__
        uses: mamba-org/setup-micromamba@0dea6379afdaffa5d528b3d1dabc45da37f443fc # v2.0.4
        with:
          cache-downloads: true
          environment-file: environment-dev.yml
          create-args: >-
            python=__PYTHON_VERSION__
      - name: Install {{ cookiecutter.project_name }}
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          micromamba list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest --cov {{ cookiecutter.project_slug }}
      - name: Report Coverage
        run: |
          python -m coveralls
        env:
          GITHUB_TOKEN: __GITHUB_TOKEN__
          COVERALLS_FLAG_NAME: run-Python__PYTHON_VERSION__-conda
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github

{%- endif %}

  finish:
    needs:
      - test-pypi
      {%- if cookiecutter.use_conda == "y" %}
      - test-conda
      {%- endif %}
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          disable-sudo: true
          egress-policy: audit
      - name: Coveralls Finished
        uses: coverallsapp/github-action@cfd0633edbd2411b532b808ba7a8b5e04f76d2c8 # v2.3.4
        with:
          parallel-finished: true
