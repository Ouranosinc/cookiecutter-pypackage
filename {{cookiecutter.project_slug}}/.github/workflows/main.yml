name: {{ cookiecutter.project_name }} Testing Suite

on:
  push:
    branches:
      - main
    paths-ignore:
      - CHANGES.rst
      - README.rst
      - pyproject.toml
      - setup.cfg
      - {{ cookiecutter.project_slug }}/__init__.py
  pull_request:

jobs:
  lint:
    name: Lint (Python__PYTHON_VERSION__)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - "3.x"
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: __GITHUB_TOKEN__
      - uses: actions/checkout@v4
      - name: Set up Python__PYTHON_VERSION__
        uses: actions/setup-python@v4
        with:
          python-version: __PYTHON_VERSION__
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Run linting suite
        run: |
          python -m tox -e lint

  test-pypi:
    name: Test with Python__PYTHON_VERSION__ (Python__PYTHON_VERSION__ + tox)
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - tox-env: "py38"
            python-version: "3.8"
          - tox-env: "py39"
            python-version: "3.9"
          - tox-env: "py310"
            python-version: "3.10"
          - tox-env: "py311"
            python-version: "3.11"
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python__PYTHON_VERSION__
        uses: actions/setup-python@v4
        with:
          python-version: __PYTHON_VERSION__
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Test with tox
        run: |
          python -m tox -e __TOX_ENV__
        env:
          GITHUB_TOKEN: __GITHUB_TOKEN__
          COVERALLS_FLAG_NAME: run-__TOX_ENV__
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github
{%- if cookiecutter.use_conda == "y" %}

  test-conda:
    name: Test with Python__PYTHON_VERSION__ (Anaconda)
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Conda (Micromamba) with Python__PYTHON_VERSION__
        uses: mamba-org/setup-micromamba@v1
        with:
          cache-downloads: true
          environment-file: environment-dev.yml
          create-args: >-
            mamba
            python=__PYTHON_VERSION__
      - name: Conda and Mamba versions
        run: |
          mamba --version
          echo "micromamba $(micromamba --version)"
      - name: Compile catalogs and install {{ cookiecutter.project_slug }}
        run: |
          python -m pip install --no-deps .
      - name: Check versions
        run: |
          conda list
          python -m pip check || true
      - name: Test with pytest
        run: |
          python -m pytest --cov {{ cookiecutter.project_slug }}
      - name: Report coverage
        run: |
          python -m coveralls
        env:
          GITHUB_TOKEN: __GITHUB_TOKEN__
          COVERALLS_FLAG_NAME: run-Python__PYTHON_VERSION__-conda
          COVERALLS_PARALLEL: true
          COVERALLS_SERVICE_NAME: github
{%- endif %}

  finish:
    needs:
      - test-pypi
      {%- if cookiecutter.use_conda == "y" %}
      - test-conda
      {%- endif %}
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
      - name: Coveralls Finished
        run: |
          python -m pip install --upgrade coveralls
          python -m coveralls --finish
        env:
          GITHUB_TOKEN: __GITHUB_TOKEN__
          COVERALLS_SERVICE_NAME: github
